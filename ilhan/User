import java.sql.*;

public class User {
    private String username;
    private String password;
    private String role;
    private Connection conn;

    // Constructor to initialize user details
    public User(String username, String password, String role) {
        this.username = username;
        this.password = password;
        this.role = role;
        
        try {
            // Connect to the database
            this.conn = DriverManager.getConnection("jdbc:sqlite:cinema_center.db");
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    // Method to save user details to the database
    public void saveToDb() {
        try {
            // Check if user already exists
            PreparedStatement stmt = conn.prepareStatement("SELECT * FROM Users WHERE username = ?");
            stmt.setString(1, this.username);
            ResultSet result = stmt.executeQuery();

            if (result.next()) {
                // Update existing user
                stmt = conn.prepareStatement("UPDATE Users SET password = ?, role = ? WHERE username = ?");
                stmt.setString(1, this.password);
                stmt.setString(2, this.role);
                stmt.setString(3, this.username);
                stmt.executeUpdate();
            } else {
                // Insert new user
                stmt = conn.prepareStatement("INSERT INTO Users (username, password, role) VALUES (?, ?, ?)");
                stmt.setString(1, this.username);
                stmt.setString(2, this.password);
                stmt.setString(3, this.role);
                stmt.executeUpdate();
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    // Method to change the user's password
    public void changePassword(String newPassword) {
        this.password = newPassword;
        try {
            PreparedStatement stmt = conn.prepareStatement("UPDATE Users SET password = ? WHERE username = ?");
            stmt.setString(1, this.password);
            stmt.setString(2, this.username);
            stmt.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    // Method to retrieve user details
    public String getUserDetails() {
        try {
            PreparedStatement stmt = conn.prepareStatement("SELECT username, password, role FROM Users WHERE username = ?");
            stmt.setString(1, this.username);
            ResultSet result = stmt.executeQuery();

            if (result.next()) {
                return "Username: " + result.getString("username") + ", Password: " + result.getString("password") + ", Role: " + result.getString("role");
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return "User not found.";
    }

    // Method to delete user from database
    public void deleteUser() {
        try {
            PreparedStatement stmt = conn.prepareStatement("DELETE FROM Users WHERE username = ?");
            stmt.setString(1, this.username);
            stmt.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    // Close the database connection
    public void close() {
        try {
            if (conn != null) {
                conn.close();
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}
