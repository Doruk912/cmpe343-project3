import java.util.ArrayList;
import java.util.List;
import java.util.Map;

public class ProductCatalog {

    private List<Map<String, Object>> products;

    public ProductCatalog() {
        // Initialize the product catalog with an empty list of products
        this.products = new ArrayList<>();
    }

    public void addProduct(Map<String, Object> product) {
        // Add a new product to the catalog
        products.add(product);
    }

    public boolean updateProduct(int productId, Map<String, Object> updatedDetails) {
        // Update the details of an existing product in the catalog
        for (Map<String, Object> product : products) {
            if ((int) product.get("product_id") == productId) {
                product.putAll(updatedDetails); // Update the product details
                return true;
            }
        }
        return false;
    }

    public boolean removeProduct(int productId) {
        // Remove a product from the catalog
        for (Map<String, Object> product : products) {
            if ((int) product.get("product_id") == productId) {
                products.remove(product);
                return true;
            }
        }
        return false;
    }

    public Map<String, Object> getProduct(int productId) {
        // Retrieve a product's details by its product ID
        for (Map<String, Object> product : products) {
            if ((int) product.get("product_id") == productId) {
                return product;
            }
        }
        return null;
    }

    public List<Map<String, Object>> getAllProducts() {
        // Get a list of all products in the catalog
        return products;
    }

    public boolean checkStock(int productId, int quantity) {
        // Check if there is enough stock for a particular product
        Map<String, Object> product = getProduct(productId);
        if (product != null && (int) product.get("stock") >= quantity) {
            return true;
        }
        return false;
    }

    public boolean updateStock(int productId, int quantity) {
        // Update the stock quantity of a product
        for (Map<String, Object> product : products) {
            if ((int) product.get("product_id") == productId) {
                int newStock = (int) product.get("stock") + quantity;
                if (newStock >= 0) {
                    product.put("stock", newStock);
                    return true;
                }
                return false;  // Stock cannot be negative
            }
        }
        return false;
    }

    public List<Map<String, Object>> getProductSummary() {
        // Get a summary of all products in the catalog
        List<Map<String, Object>> summary = new ArrayList<>();
        for (Map<String, Object> product : products) {
            Map<String, Object> productSummary = Map.of(
                "name", product.get("name"),
                "price", product.get("price"),
                "stock", product.get("stock")
            );
            summary.add(productSummary);
        }
        return summary;
    }

    public static void main(String[] args) {
        ProductCatalog catalog = new ProductCatalog();

        // Example product data
        Map<String, Object> product1 = Map.of(
            "product_id", 1,
            "name", "Coke",
            "price", 2.5,
            "stock", 100
        );

        Map<String, Object> product2 = Map.of(
            "product_id", 2,
            "name", "Pepsi",
            "price", 2.0,
            "stock", 200
        );

        catalog.addProduct(product1);
        catalog.addProduct(product2);

        // Get product details
        System.out.println("Product 1: " + catalog.getProduct(1));

        // Check stock
        System.out.println("Is stock available for product 1 (quantity 50): " + catalog.checkStock(1, 50));

        // Update stock
        catalog.updateStock(1, -20); // Reduce stock of product 1 by 20
        System.out.println("Updated stock for product 1: " + catalog.getProduct(1).get("stock"));

        // Update product
        Map<String, Object> updatedDetails = Map.of("price", 2.8, "stock", 120);
        catalog.updateProduct(1, updatedDetails);
        System.out.println("Updated product 1: " + catalog.getProduct(1));

        // Get product summary
        System.out.println("Product Summary: " + catalog.getProductSummary());
    }
}
